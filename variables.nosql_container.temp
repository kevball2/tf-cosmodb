variable "database_name" {
  type        = string
  description = "(Required) The name of the Cosmos DB SQL Database to create the container within. Changing this forces a new resource to be created."
  nullable    = false

}

variable "partition_key_path" {
  type        = string
  description = "(Required) Define a partition key. Changing this forces a new resource to be created."
  nullable    = false

}

variable "partition_key_version" {
  type        = number
  description = "partition_key_version - (Optional) Define a partition key version. Changing this forces a new resource to be created. Possible values are 1and 2. This should be set to 2 in order to use large partition keys."

}

variable "default_ttl" {
  type        = number
  description = "- (Optional) The default time to live of SQL container. If missing, items are not expired automatically. If present and the value is set to -1, it is equal to infinity, and items dont expire by default. If present and the value is set to some number n  items will expire n seconds after their last modified time."

}

variable "analytical_storage_ttl" {
  type        = number
  description = "(Optional) The default time to live of Analytical Storage for this SQL container. If present and the value is set to -1, it is equal to infinity, and items dont expire by default. If present and the value is set to some number n  items will expire n seconds after their last modified time."

}

variable "unique_key" {
  type = object({
    paths = {
      type = list(string)
    }
  })
  default     = null
  description = "paths - (Required) A list of paths to use for this unique key. Changing this forces a new resource to be created."
}

variable "autoscale_settings" {
  type = object({
    max_throughput = {
      type = number
    }
  })
  default     = null
  description = "max_throughput - (Optional) The maximum throughput of the SQL database (RU/s). Must be between 1,000 and 1,000,000. Must be set in increments of 1,000. Conflicts with throughput."
}

variable "indexing_policy" {
  type = object({
    indexing_mode = {
      type = string
    }
    included_path = optional(map(object({
      path = {
        type = string
      }
    })))
    excluded_path = optional(map(object({
      path = {
        type = string
      }
    })))
    composite_index = optional(map(object({
      index = optional(map(object({
        path = {
          type = string
        }
        order = {
          type = string
        }
        }
      )))
    })))
    spatial_index = optional(map(object({
      path = {
        type = string
      }
    })))
  })
  default = null
}

variable "conflict_resolution_policy" {
  type = object({
    mode = {
      type = string
    }
    conflict_resolution_path = {
      type = string
    }
    conflict_resolution_procedure = {
      type = string
    }
  })
  default     = null
  description = "max_throughput - (Optional) The maximum throughput of the SQL database (RU/s). Must be between 1,000 and 1,000,000. Must be set in increments of 1,000. Conflicts with throughput."
}